{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Choose the VNET where to deploy the resources"
      }
    },
    "virtualNetworkResourceGroup": {
      "type": "string",
     
      "metadata": {
        "description": "Resource Group VNET is deployed in"
      }
    },
    "subnet1Name": {
      "type": "string",
      "metadata": {
        "description": "Name of the subnet inside the VNET"
      }
    },
    "loadBalancerName": {
      "type": "string",
      "metadata": {
        "description": "This is the name of the load balancer"
      }
    },
      "loadBalancerIP": {
      "type": "string",
      "metadata": {
        "description": "IP of the load balancer"
      }
    },
    
    "availabilitySetName": {
      "type": "string",
      "metadata": {
        "description": "Set a name for the Availability Set."
      }
    },
    "StorageAccountType":{
      "type": "string",
      "defaultValue" :"Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "diagStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Diagnostics Storage account name"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Local Admin username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Local Admin password"
      }
    },
    "virtualMachineNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix to use for VM names"
      }
    },
    "virtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_A1",
      "allowedValues": [
        "Basic_A0",
        "Basic_A1",
        "Basic_A3",
        "Basic_A4",
        "Standard_A0",
        "Standard_A1",
        "Standard_A1_v2",
        "Standard_A10",
        "Standard_A11",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_D1",
        "Standard_D1_v2",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D15_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D3",
        "Standard_D3_v2",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_D5_v2"
      ],
            "metadata": {
        "description": "Choose a VM Size."
        } 
    },
    "numberOfInstances": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 2,
      "maxValue": 5,
      "metadata": {
        "description": "Number of VMs to deploy"
      }
          },
    "windowsOSVersion": {
      "type": "string",
      "defaultValue": "2016-Datacenter",
      "allowedValues": [
        "2012-R2-Datacenter",
         "2016-Datacenter"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
        }
      }
    },
  "variables": {
    "diagStorageAccountType": "Standard_LRS",
    "vnetID": "[resourceId(parameters('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/', parameters('subnet1Name'))]",
    "numberOfInstances": "[parameters('numberOfInstances')]",
    "virtualMachineNIC":  "vmnic",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',parameters('loadBalancerName'))]"
  },
    "resources": [
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('diagStorageAccountName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('diagStorageAccountType')]"
      }
    },
    {
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[parameters('availabilitySetName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformFaultDomainCount": "2",
        "platformUpdateDomainCount": "4",
        "managed": "true"
      }
    },
          {
        "apiVersion": "2016-09-01",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(variables('virtualMachineNIC'), copyindex(1))]",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "nicLoop",
          "count": "[variables('numberOfInstances')]"
        },
        "dependsOn": [
                   "[concat('Microsoft.Network/loadBalancers/', parameters('loadBalancerName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "[variables('subnetRef')]"
                },
                "loadBalancerBackendAddressPools": [
                  {
                    "id": "[concat(variables('lbID'), '/backendAddressPools/BackendPool1')]"
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2016-09-01",
        "type": "Microsoft.Network/loadBalancers",
        "name": "[parameters('loadBalancerName')]",
        "location": "[resourceGroup().location]",
                "properties": {
          "frontendIPConfigurations": [
            {
              "properties": {
                "subnet": {
                  "id": "[variables('subnetRef')]"
                },
                "privateIPAddress": "[parameters('loadBalancerIP')]",
                          "privateIPAllocationMethod": "Static"
              },
              "name": "LoadBalancerFrontend"
            }
          ],
          "backendAddressPools": [
            {
              "name": "BackendPool1"
            }
          ],
          "loadBalancingRules": [
            {
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
                },
                "backendAddressPool": {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/BackendPool1')]"
                },
                "probe": {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/probes/lbprobe')]"
                },
                "protocol": "Tcp",
                "frontendPort": 80,
                "backendPort": 80,
                "idleTimeoutInMinutes": 15
              },
              "Name": "lbrule"
            }
          ],
          "probes": [
            {
              "properties": {
                "protocol": "Tcp",
                "port": 80,
                "intervalInSeconds": 15,
                "numberOfProbes": 2
              },
              "name": "lbprobe"
            }
          ]
        }
      },
      {
        "apiVersion": "2016-04-30-preview",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[concat(parameters('virtualMachineNamePrefix'), copyindex(1))]",
        "copy": {
          "name": "virtualMachineLoop",
          "count": "[variables('numberOfInstances')]"
        },
          "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Storage/storageAccounts/', parameters('diagStorageAccountName'))]",
          "[concat('Microsoft.Network/networkInterfaces/', variables('virtualMachineNIC'), copyindex(1))]",
          "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]"
        ],
          "properties": {
            "osProfile": {
              "computerName": "[concat(parameters('virtualMachineNamePrefix'), copyIndex(1))]",
              "adminUsername": "[parameters('adminUsername')]",
              "adminPassword": "[parameters('adminPassword')]",
              "windowsConfiguration": {
                "provisionVmAgent": "true"
          }
            },
            "hardwareProfile": {
              "vmSize": "[parameters('virtualMachineSize')]"
            },
            "storageProfile": {
              "imageReference": {
                "publisher": "MicrosoftWindowsServer",
                "offer": "WindowsServer",
                "sku": "[parameters('windowsOSVersion')]",
                "version": "latest"
              },
              "osDisk": {
                "name": "[concat(parameters('virtualMachineNamePrefix'), copyIndex(1), '-OS')]",
                "createOption": "FromImage",
                "managedDisk": {
                  "storageAccountType":"[parameters('StorageAccountType')]"
                }
              },
              "dataDisks": [ ]
            },
            "networkProfile": {
              "networkInterfaces": [
                {
                  "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('virtualMachineNIC'),copyindex(1)))]"
                }
              ]
            },
            "diagnosticsProfile": {
              "bootDiagnostics": {
                "enabled": true,
                "storageUri": "[concat('http://',parameters('diagStorageAccountName'),'.blob.core.windows.net')]"
              }
            },
            "availabilitySet": {
              "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
            }
          }
      }
  ]
}